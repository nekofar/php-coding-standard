<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="Nekofar Coding Standard"
         xsi:noNamespaceSchemaLocation="../vendor/squizlabs/php_codesniffer/phpcs.xsd">

    <rule ref="PSR12"/>

    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>

    <rule ref="Squiz.Commenting.ClassComment"/>
    <rule ref="Squiz.Commenting.VariableComment"/>

    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/>
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamTag" />
        <exclude name="Squiz.Commenting.FunctionComment.MissingReturn" />
        <exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/>
    </rule>

    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>

    <!-- Detect problems with variables -->
    <rule ref="VariableAnalysis"/>

    <!-- Look for unused or unimported symbols -->
    <!--<rule ref="ImportDetection"/>-->

    <!-- Run against the PHPCompatibility ruleset -->
    <rule ref="PHPCompatibility"/>

    <!-- Check for cross-version support for PHP 5.6 and higher. -->
    <config name="testVersion" value="7.3-"/>

    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint" />

    <!-- Enforces having declare at the top of each PHP file. -->
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="spacesCountAroundEqualsSign" value="0"/>
            <property name="newlinesCountBetweenOpenTagAndDeclare" value="2"/>
        </properties>
    </rule>

    <!-- Enforces number of lines before description or annotations -->
    <rule ref="SlevomatCodingStandard.Commenting.DocCommentSpacing">
        <properties>
            <property name="linesCountBetweenDifferentAnnotationsTypes" value="1"/>
        </properties>
    </rule>

    <!-- Enforces class/trait/interface members in the correct order -->
    <rule ref="SlevomatCodingStandard.Classes.ClassStructure"/>

    <!-- Enforces use of early exit for better code readability of blocks -->
    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit"/>

    <!-- Enforces use of strict parameter on function calls for functions that have it -->
    <rule ref="SlevomatCodingStandard.Functions.StrictCall"/>

    <!-- Enforces to remove useless semicolons -->
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>

    <!-- Enforces to remove unused variables -->
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable"/>

    <!-- Enforces to remove useless variables -->
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>

    <!-- Enforces reasonable end bracket placement for multi-line arrays -->
    <rule ref="SlevomatCodingStandard.Arrays.MultiLineArrayEndBracketPlacement"/>

    <!-- Enforces trailing commas in multi-line arrays and requires short array syntax -->
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>

    <!-- Enforces lines count between different class members, eg. between last property and first method. -->
    <rule ref="SlevomatCodingStandard.Classes.ClassMemberSpacing">
        <properties>
            <property name="linesCountBetweenMembers" value="1"/>
        </properties>
    </rule>

    <!-- Enforces that there is one blank line between methods -->
    <rule ref="SlevomatCodingStandard.Classes.MethodSpacing">
        <properties>
            <property name="minLinesCount" value="1"/>
            <property name="maxLinesCount" value="1"/>
        </properties>
    </rule>

    <!-- Enforces use of modern name reference on classes instead of legacy ones -->
    <rule ref="SlevomatCodingStandard.Classes.ModernClassNameReference"/>

    <!-- Enforces to disallows short ternary operator -->
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowShortTernaryOperator"/>

    <!-- Enforces conditions with one or more boolean operators to be split to more lines -->
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireMultiLineCondition"/>

    <!-- Enforces whether uses at the top of a file are alphabetically sorted -->
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>

    <!-- Enforces using short form of list syntax instead of list -->
    <rule ref="SlevomatCodingStandard.PHP.ShortList"/>

    <!-- Enforces declaring visibility for all class constants -->
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>

    <!-- Enforces using only name for namespace references -->
    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly"/>

    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint" />

    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint" />
</ruleset>
